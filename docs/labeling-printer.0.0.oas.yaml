openapi: '3.0.2'
info:
  title: API Title
  description: |-
    An API for printing LIMS labels using onsite labeling printer.

    The LabelingPrinter API requires an API token.
    For development and testing purposes you can use:
    - for user: `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MjA4NGYwMC04ZmRkLTQxMGMtODAwYy1kMDZlZTMyNTg4OTQifQ.ay3PtKhDvNrTy_IQ35JQ0vcX5CWBD0GueaJ9IXluU_w`
    - for admin: `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIyZTllOGM5My1hMjlmLTRmMzUtOWNkMS1kNDI0ODllMWEwMTYiLCJpc0FkbWluIjp0cnVlfQ.NzsZlvC1Lje9OWIkBhd227XOv6PZzFVaTScgDTGVa1w`

    You can then add the header: `Authorization: Bearer <token>` to requests.
  version: '0.0'
  contact:
    name: Nikita Moshensky
    email: nikita@moshensky.com
  license:
    name: Apache 2.0
    url: https://apache.org/licenses/LICENSE-2.0
# externalDocs:
#   url: https://...
#   description: Hosted docs
servers:
  - url: http://localhost:4010
    description: Prism server (uses mock data)
  - url: http://localhost:5000
    description: Development server
security:
  - BearerAuth: []
paths:
  /print-jobs:
    get:
      description: Get print jobs.
      operationId: getPrintJobs
      tags:
        - PrintJobs
      # parameters:
      #   - name: limit
      #     in: query
      #     description: The maximum number of results to return
      #     schema:
      #       type: integer
      #   - name: offset
      #     in: query
      #     description: Number of results to skip before returning any
      #     schema:
      #       type: integer
      responses:
        '200':
          description: Printing jobs in the queue to be printed.
          content:
            application/json:
              schema:
                type: object
                required:
                  - jobs
                properties:
                  total:
                    type: integer
                    description: Total jobs number
                  jobs:
                    type: array
                    items:
                      $ref: '#/components/schemas/PrintJob'
              examples:
                with-data:
                  summary: With data
                  value:
                    jobs:
                      - label:
                          requestNumber: RA234
                          type: request-label
                          requestCreatedAt: '2000-06-21T21:00:00.0Z'
                        copies: 9
                        createdByUserId: 3db19081-86d3-b380-0365-281d0311ad45
                        canceledByUserId: 5666aac2-aaa4-0f27-30ce-f2db552d2fc8
                        id: 130389a2-7448-b9fe-1fa9-1a24e2e502bb
                        state: canceled
                        canceledAt: '2009-07-17T21:00:00.0Z'
                        createdAt: '2009-01-26T22:00:00.0Z'
                      - label:
                          executorUser: Nikita Moshensky
                          indicatorMethod: 0015-ILM-GT:2019
                          requestNumber: RN111
                          requestIndicatorId: '457'
                          indicatorName: Aspergillus brasiliensis
                          type: request-indicator-label
                        copies: 4
                        state: printing
                        createdByUserId: c6f2772a-74be-e21e-3b8f-f4383d46adf2
                        createdAt: '1997-01-28T22:00:00.0Z'
                        id: 164b92e8-24c7-61ba-076f-db056a5981fb
                        canceledAt: '1970-05-03T22:00:00.0Z'
                        canceledByUserId: 5dd818d9-683a-940d-ae94-2c0588ee38ee
                      - label:
                          requestCreatedAt: '1989-06-13T21:00:00.0Z'
                          type: request-label
                          requestNumber: venia
                        copies: 4
                        createdByUserId: 1f563402-5982-8f97-64b5-2ed8a1b3282a
                        createdAt: '1949-10-02T22:00:00.0Z'
                        state: completed
                        startedAt: '1942-06-06T22:00:00.0Z'
                        id: 207eddc4-93fe-b673-35c3-c6e6ebf68660
                        completedAt: '1966-04-24T22:00:00.0Z'
                      - label:
                          requestNumber: 'est '
                          requestCreatedAt: '1997-09-07T21:00:00.0Z'
                          type: request-label
                        copies: 4
                        canceledByUserId: c1e59882-6fd3-4084-578d-4021b8ede2b2
                        id: aadf43f8-1253-aff6-7709-fff526f5eb1e
                        canceledAt: '1949-10-05T22:00:00.0Z'
                        createdAt: '1984-11-28T00:00:00.0Z'
                        state: waiting
                        createdByUserId: 15ea879b-6c6b-ecc5-904b-8e94d75d008a
                empty:
                  summary: Empty
                  value:
                    jobs: []
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServer'

    post:
      description: Create print job.
      operationId: createPrintJob
      tags:
        - PrintJobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPrintJob'
      responses:
        '201':
          description: Waiting print job response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaitingPrintJob'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServer'

  /print-jobs/{jobId}:
    parameters:
      - in: path
        name: jobId
        required: true
        schema:
          type: string
          format: uuid
          description: The job's id
          example: d278208f-3238-4db1-9356-d07c574bb9ce
    get:
      description: View job
      operationId: viewJobWithId
      tags:
        - PrintJobs
      responses:
        '200':
          description: Job details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrintJob'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServer'

    delete:
      description: Delete job from the queue or history without leaving any trace
      operationId: deleteJobWithId
      tags:
        - PrintJobs
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServer'

  /print-jobs/{jobId}/cancel:
    parameters:
      - in: path
        name: jobId
        required: true
        schema:
          type: string
          format: uuid
          description: The job's id
          example: d278208f-3238-4db1-9356-d07c574bb9ce
    put:
      description: Cancel print job if the job is in `waiting` state
      operationId: cancelJobWithId
      tags:
        - PrintJobs
      responses:
        '200':
          description: Job details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CanceledPrintJob'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServer'

  /health:
    get:
      security: []
      description: Get server health status.
      operationId: getServerHealth
      responses:
        '200':
          description: Health status
          content: 
            application/json:
              schema:
                type: object
                properties:
                  apiServer:
                    type: string
                    enum: [up]
                  db:
                    type: string
                    enum: [up, down]
        '500':
          $ref: '#/components/responses/InternalServer'

tags:
  - name: PrintJobs
    description: Print documents
components:
  securitySchemes:
    BearerAuth:
      description: Bearer token issued by LIMS service
      type: http
      scheme: bearer
      bearerFormat: JWT 

  schemas:
    RequestLabel:
      type: object
      properties:
        type:
          type: string
          pattern: '^request-label$'
        requestNumber:
          type: string
          minLength: 3
          maxLength: 12
        requestCreatedAt:
          type: string
          format: date-time

    RequestIndicatorLabel:
      type: object
      properties:
        type:
          type: string
          pattern: '^request-indicator-label$'
        requestIndicatorId:
          type: string
        requestNumber:
          type: string
          minLength: 1
          maxLength: 10
        executorUser:
          type: string
        indicatorName:
          type: string
        indicatorMethod:
          type: string

    Label:
      type: object
      oneOf:
        - $ref: '#/components/schemas/RequestLabel'
        - $ref: '#/components/schemas/RequestIndicatorLabel'

    NewPrintJob:
      type: object
      required:
        - label
        - copies
      properties:
        label:
          $ref: '#/components/schemas/Label'
        copies:
          description: The number of copies to print. The default is 1.
          type: integer
          minimum: 1
          maximum: 10

    ExistingPrintJob:
      allOf:
        - $ref: '#/components/schemas/NewPrintJob'
        - type: object
          properties:
            id:
              type: string
              format: uuid
            createdByUserId:
              type: string
              format: uuid
            createdAt:
              type: string
              format: date-time

    WaitingPrintJob:
      allOf:
        - $ref: '#/components/schemas/ExistingPrintJob'
        - type: object
          properties:
            state:
              type: string
              pattern: '^waiting$'

    StartedPrintJob:
      allOf:
        - $ref: '#/components/schemas/ExistingPrintJob'
        - type: object
          properties:
            state:
              type: string
              pattern: '^printing$'
            startedAt:
              type: string
              format: date-time

    CompletedPrintJob:
      allOf:
        - $ref: '#/components/schemas/ExistingPrintJob'
        - type: object
          properties:
            state:
              type: string
              pattern: '^completed$'
            startedAt:
              type: string
              format: date-time
            completedAt:
              type: string
              format: date-time

    CanceledPrintJob:
      allOf:
        - $ref: '#/components/schemas/ExistingPrintJob'
        - type: object
          properties:
            state:
              type: string
              pattern: '^canceled$'
            canceledAt:
              type: string
              format: date-time
            canceledByUserId:
              type: string
              format: uuid

    PrintJob:
      type: object
      oneOf:
        - $ref: '#/components/schemas/WaitingPrintJob'
        - $ref: '#/components/schemas/StartedPrintJob'
        - $ref: '#/components/schemas/CompletedPrintJob'
        - $ref: '#/components/schemas/CanceledPrintJob'
      discriminator:
        propertyName: state

    ApiError:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message

    BadRequestError:
      allOf:
        - $ref: '#/components/schemas/ApiError'
        - type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  errorCode:
                    type: string
                  message:
                    type: string
                  path:
                    type: string

  responses:

    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequestError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
    InternalServer:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
